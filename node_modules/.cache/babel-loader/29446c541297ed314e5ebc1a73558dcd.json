{"ast":null,"code":"var _jsxFileName = \"/Users/yong/development/assignments/module3/capstone/capstone-level3-memegenerator-yongdel/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport React, { component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleReset = e => {\n      e.preventDefault();\n      this.setState({\n        topCaption: \"\",\n        bottomCaption: \"\"\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const getRandomImage = this.state.imageSrc[Math.floor(Math.random() * this.state.imageSrc.length)].url;\n      const {\n        topCaption,\n        bottomCaption,\n        randomImage\n      } = this.state;\n      const newMeme = {\n        bottomCaption: bottomCaption,\n        topCaption: topCaption,\n        randomImage: randomImage\n      };\n      this.setState(prevState => ({\n        memesList: [...prevState.memesList, newMeme]\n      }));\n      this.setState({\n        randomImage: getRandomImage\n      });\n      this.setState({\n        topCaption: \"\",\n        bottomCaption: \"\"\n      });\n    };\n\n    this.handleDelete = index => {\n      const newMemesList = [...this.state.memesList];\n      newMemesList.splice(index, 1);\n      this.setState({\n        memesList: newMemesList\n      });\n    };\n\n    this.state = {\n      topCaption: \"\",\n      bottomCaption: \"\",\n      randomImage: \"\",\n      imageSrc: [],\n      memesList: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`https://api.imgflip.com/get_memes`).then(res => res.json()).then(data => {\n      const {\n        memes\n      } = data.data;\n      console.log(memes);\n      this.setState({\n        imageSrc: memes,\n        randomImage: memes[Math.floor(Math.random() * memes.length)].url\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        sticky: \"top\",\n        expand: \"sm\",\n        collapseOnSelect: true,\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            width: \"40px\",\n            height: \"40px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), ' ', \"Logo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          className: \"coloring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            children: [/*#__PURE__*/_jsxDEV(NavDropdown, {\n              title: \"Products\",\n              children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#products/tea\",\n                children: \"Tea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#products/coffee\",\n                children: \"Coffee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#products/chocolate\",\n                children: \"Chocolate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n                href: \"#products/promo\",\n                children: \"Promo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#blog\",\n              children: \"Blog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#about-us\",\n              children: \"About Us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#contact-us\",\n              children: \"Contact Us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: \"This is a content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yong/development/assignments/module3/capstone/capstone-level3-memegenerator-yongdel/src/App.js"],"names":["Nav","Navbar","NavDropdown","React","component","App","Component","constructor","handleChange","e","preventDefault","name","value","target","setState","handleReset","topCaption","bottomCaption","handleSubmit","getRandomImage","state","imageSrc","Math","floor","random","length","url","randomImage","newMeme","prevState","memesList","handleDelete","index","newMemesList","splice","bind","componentDidMount","fetch","then","res","json","data","memes","console","log","catch","err","render","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport React, {component} from 'react';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      topCaption: \"\",\n      bottomCaption: \"\",\n      randomImage: \"\",\n      imageSrc: [],\n      memesList: []\n  }\n  this.handleChange = this.handleChange.bind(this)\n  this.handleSubmit = this.handleSubmit.bind(this)\n  this.handleReset = this.handleReset.bind(this)\n  this.handleDelete = this.handleDelete.bind(this)\n}\n\ncomponentDidMount() {\n  fetch(`https://api.imgflip.com/get_memes`)\n  .then(res => res.json())\n  .then(data => {\n      const {memes} = data.data\n      console.log(memes)\n      this.setState(\n          {\n              imageSrc: memes,\n              randomImage: memes[Math.floor(Math.random() * memes.length)].url\n          })\n  })\n  .catch(err => console.log(err))\n}\nhandleChange = e => {\n  e.preventDefault()\n  const {name, value} = e.target\n  this.setState({\n      [name]: value\n  })\n}\nhandleReset = e => {\n  e.preventDefault()\n  this.setState({\n      topCaption: \"\",\n      bottomCaption: \"\"\n  })\n}\nhandleSubmit = e => {\n  e.preventDefault()\n  const getRandomImage = this.state.imageSrc[Math.floor(Math.random() * this.state.imageSrc.length)].url\n  const {topCaption, bottomCaption, randomImage} = this.state\n  const newMeme = {\n      bottomCaption: bottomCaption,\n      topCaption: topCaption,\n      randomImage: randomImage\n  }\n  this.setState(prevState => ({\n      memesList: [...prevState.memesList, newMeme]\n  }))\n  this.setState({\n      randomImage: getRandomImage\n  })\n  this.setState({\n      topCaption: \"\",\n      bottomCaption: \"\"\n  })\n}\nhandleDelete = index => {\n      const newMemesList = [...this.state.memesList]\n      newMemesList.splice(index, 1)\n          this.setState({\n              memesList: newMemesList\n      })\n}\n  render() {\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\"\n        sticky=\"top\" expand=\"sm\" collapseOnSelect>\n        <Navbar.Brand>\n          <img src={logo} width=\"40px\" height=\"40px\" />{' '}\n          Logo\n        </Navbar.Brand>\n\n        <Navbar.Toggle className=\"coloring\" />\n        <Navbar.Collapse>\n          <Nav>\n            <NavDropdown title=\"Products\">\n              <NavDropdown.Item href=\"#products/tea\">Tea</NavDropdown.Item>\n              <NavDropdown.Item href=\"#products/coffee\">Coffee</NavDropdown.Item>\n              <NavDropdown.Item href=\"#products/chocolate\">Chocolate</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#products/promo\">Promo</NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link href=\"#blog\">Blog</Nav.Link>\n            <Nav.Link href=\"#about-us\">About Us</Nav.Link>\n            <Nav.Link href=\"#contact-us\">Contact Us</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n\n      </Navbar>\n      <div className=\"content\">\n        This is a content.\n      </div>\n    </div>\n  );\n  } \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}