{"ast":null,"code":"var _jsxFileName = \"/Users/yong/development/assignments/module3/capstone/capstone-level3-memegenerator-yongdel/src/components/MemeForm.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      topCaption: this.props.topCaption || \"\",\n      bottomCaption: this.props.bottomCaption || \"\",\n      randomImage: this.props.randomImage\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const memeObj = {\n        topCaption: this.state.topCaption,\n        bottomCaption: this.state.bottomCaption,\n        randomImage: this.props.randomImage\n      };\n      this.props.submit(memeObj, this.props.id);\n      if (this.props.isEdit) this.props.toggleEdit(); // this.props.randomImg ? this.props.randomImg() : do nothing\n\n      this.props.randomImg && this.props.randomImg();\n      this.setState({\n        topCaption: \"\",\n        bottomCaption: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.randomImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"top-cap\",\n          children: this.state.topCaption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bottom-cap\",\n          children: this.state.bottomCaption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-caption\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topCaption\",\n          placeholder: \"Top Caption\",\n          value: this.state.topCaption,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"bottomCaption\",\n          placeholder: \"Bottom Caption\",\n          value: this.state.bottomCaption,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-gen\",\n          type: \"submit\",\n          children: \"Add Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MemeForm;","map":{"version":3,"sources":["/Users/yong/development/assignments/module3/capstone/capstone-level3-memegenerator-yongdel/src/components/MemeForm.js"],"names":["React","MemeForm","Component","state","topCaption","props","bottomCaption","randomImage","handleChange","e","name","value","target","setState","handleSubmit","preventDefault","memeObj","submit","id","isEdit","toggleEdit","randomImg","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;;;AAIA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWD,UAAX,IAAyB,EADjC;AAEJE,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,IAA4B,EAFvC;AAGJC,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AAHpB,KAF2B;;AAAA,SAQnCC,YARmC,GAQpBC,CAAC,IAAI;AAChB,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAgBF,CAAC,CAACG,MAAxB;AACA,WAAKC,QAAL,CAAc;AAAC,SAACH,IAAD,GAAQC;AAAT,OAAd;AACH,KAXkC;;AAAA,SAYnCG,YAZmC,GAYpBL,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAMC,OAAO,GAAG;AACZZ,QAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UADX;AAEZE,QAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAFd;AAGZC,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AAHZ,OAAhB;AAKA,WAAKF,KAAL,CAAWY,MAAX,CAAkBD,OAAlB,EAA2B,KAAKX,KAAL,CAAWa,EAAtC;AACA,UAAG,KAAKb,KAAL,CAAWc,MAAd,EAAsB,KAAKd,KAAL,CAAWe,UAAX,GARL,CAUjB;;AACA,WAAKf,KAAL,CAAWgB,SAAX,IAAwB,KAAKhB,KAAL,CAAWgB,SAAX,EAAxB;AACA,WAAKR,QAAL,CAAc;AACVT,QAAAA,UAAU,EAAE,EADF;AAEVE,QAAAA,aAAa,EAAE;AAFL,OAAd;AAIH,KA5BkC;AAAA;;AA8BnCgB,EAAAA,MAAM,GACN;AACI,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAE,KAAKjB,KAAL,CAAWE,WAArB;AAAkC,UAAA,GAAG,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA,oBAAyB,KAAKJ,KAAL,CAAWC;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4B,KAAKD,KAAL,CAAWG;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,QAAQ,EAAE,KAAKQ,YAA9C;AAAA,gCACQ;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,YAFL;AAGA,UAAA,WAAW,EAAC,aAHZ;AAIA,UAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,UAJlB;AAKA,UAAA,QAAQ,EAAE,KAAKI;AALf;AAAA;AAAA;AAAA;AAAA,gBADR,eAQQ;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,eAFL;AAGA,UAAA,WAAW,EAAC,gBAHZ;AAIA,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWG,aAJlB;AAKA,UAAA,QAAQ,EAAE,KAAKE;AALf;AAAA;AAAA;AAAA;AAAA,gBARR,eAeQ;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfR;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;;AA1DkC;;AA6DvC,eAAeP,QAAf","sourcesContent":["import React from \"react\"\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\n\nclass MemeForm extends React.Component {\n    \n    state = {\n        topCaption: this.props.topCaption || \"\",\n        bottomCaption: this.props.bottomCaption || \"\",\n        randomImage: this.props.randomImage\n    }\n\n    handleChange = e => {\n        const {name, value} = e.target\n        this.setState({[name]: value})\n    }\n    handleSubmit =(e) => {\n        e.preventDefault()\n        const memeObj = {\n            topCaption: this.state.topCaption,\n            bottomCaption: this.state.bottomCaption,\n            randomImage: this.props.randomImage\n        }\n        this.props.submit(memeObj, this.props.id)\n        if(this.props.isEdit) this.props.toggleEdit()  \n        \n        // this.props.randomImg ? this.props.randomImg() : do nothing\n        this.props.randomImg && this.props.randomImg()\n        this.setState({\n            topCaption: \"\",\n            bottomCaption: \"\"\n        })\n    }\n\n    render() \n    {\n        return (\n            <div>\n                <div className=\"meme-container\">\n                    <img src={this.props.randomImage} alt=\"\" />\n                    <h2 className=\"top-cap\">{this.state.topCaption}</h2>\n                    <h2 className=\"bottom-cap\">{this.state.bottomCaption}</h2>\n                </div>\n                <form className=\"meme-caption\" onSubmit={this.handleSubmit}>\n                        <input\n                        type=\"text\"\n                        name=\"topCaption\"\n                        placeholder=\"Top Caption\"\n                        value={this.state.topCaption}\n                        onChange={this.handleChange}\n                        />\n                        <input\n                        type=\"text\"\n                        name=\"bottomCaption\"\n                        placeholder=\"Bottom Caption\"\n                        value={this.state.bottomCaption}\n                        onChange={this.handleChange}\n                        />\n                        <button className=\"button-gen\" type=\"submit\">Add Meme</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default MemeForm"]},"metadata":{},"sourceType":"module"}