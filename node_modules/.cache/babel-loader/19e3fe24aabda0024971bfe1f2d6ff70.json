{"ast":null,"code":"var _jsxFileName = \"/Users/lizadelsmith/Desktop/capstone-level3-memegenerator-yongdel/src/App.js\";\nimport './App.css';\nimport NavBar from \"./components/NavBar\";\nimport ButtonGenerator from './components/ButtonGenerator';\nimport MemeForm from './components/MemeForm';\nimport MemeGroup from './components/MemeGroup';\nimport { Container, Row, Col, Breadcrumb } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport MemeCard from \"./MemeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleReset = e => {\n      e.preventDefault();\n      this.setState({\n        topCaption: \"\",\n        bottomCaption: \"\"\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const getRandomImage = this.state.imageSrc[Math.floor(Math.random() * this.state.imageSrc.length)].url;\n      const {\n        topCaption,\n        bottomCaption,\n        randomImage,\n        id\n      } = this.state;\n      const newMeme = {\n        bottomCaption: bottomCaption,\n        topCaption: topCaption,\n        randomImage: randomImage\n      };\n      this.setState(prevState => ({\n        memesList: [...prevState.memesList, newMeme]\n      }));\n      this.setState({\n        randomImage: getRandomImage\n      });\n      this.setState({\n        topCaption: \"\",\n        bottomCaption: \"\"\n      });\n    };\n\n    this.handleDelete = index => {\n      const newMemesList = [...this.state.memesList];\n      newMemesList.splice(index, 1);\n      this.setState({\n        memesList: newMemesList\n      });\n    };\n\n    this.state = {\n      topCaption: \"\",\n      bottomCaption: \"\",\n      randomImage: \"\",\n      imageSrc: [],\n      memesList: [],\n      oldMemes: {\n        topCaption: \"\",\n        bottomCaption: \"\",\n        randomImage: \"\",\n        id: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.editMeme = this.editMeme.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`https://api.imgflip.com/get_memes`).then(res => res.json()).then(data => {\n      const {\n        memes\n      } = data.data;\n      this.setState({\n        imageSrc: memes,\n        randomImage: memes[Math.floor(Math.random() * memes.length)].url\n      });\n    }).catch(err => console.log(err));\n  }\n\n  editMeme(meme) {\n    const filteredMemes = this.state.memeList.filter(m => {\n      return m.id !== meme.id;\n    });\n  }\n\n  render() {\n    const {\n      memesList\n    } = this.state;\n    const {\n      handleDelete,\n      handleEdit\n    } = this;\n    const memeComponent = memesList.map((img, index) => {\n      return /*#__PURE__*/_jsxDEV(MemeCard, {\n        handleDelete: handleDelete,\n        handleEdit: handleEdit,\n        index: index,\n        meme: img\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this);\n    });\n    const {\n      bottomCaption,\n      topCaption,\n      randomImage\n    } = this.state;\n    const {\n      handleChange,\n      handleSubmit,\n      handleReset\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meme-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: randomImage,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"top-cap\",\n            children: topCaption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"bottom-cap\",\n            children: bottomCaption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"meme-caption\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"topCaption\",\n            placeholder: \"Top Caption\",\n            value: topCaption,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"bottomCaption\",\n            placeholder: \"Bottom Caption\",\n            value: bottomCaption,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-gen\",\n            children: \"Generate Meme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-reset\",\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.editMeme(meme),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meme-card-container\",\n          children: memeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          href: \"#\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          href: \"https://getbootstrap.com/docs/4.0/components/breadcrumb/\",\n          children: \"Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          active: true,\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lizadelsmith/Desktop/capstone-level3-memegenerator-yongdel/src/App.js"],"names":["NavBar","ButtonGenerator","MemeForm","MemeGroup","Container","Row","Col","Breadcrumb","React","Component","MemeCard","App","constructor","handleChange","e","preventDefault","name","value","target","setState","handleReset","topCaption","bottomCaption","handleSubmit","getRandomImage","state","imageSrc","Math","floor","random","length","url","randomImage","id","newMeme","prevState","memesList","handleDelete","index","newMemesList","splice","oldMemes","bind","editMeme","componentDidMount","fetch","then","res","json","data","memes","catch","err","console","log","meme","filteredMemes","memeList","filter","m","render","handleEdit","memeComponent","map","img"],"mappings":"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","sourcesContent":["import './App.css';\nimport NavBar from \"./components/NavBar\";\nimport ButtonGenerator from './components/ButtonGenerator';\nimport MemeForm from './components/MemeForm';\nimport MemeGroup from './components/MemeGroup';\nimport { Container,Row, Col, Breadcrumb} from 'react-bootstrap'\nimport React, {Component} from 'react';\nimport MemeCard from \"./MemeCard\";\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      topCaption: \"\",\n      bottomCaption: \"\",\n      randomImage: \"\",\n      imageSrc: [],\n      memesList: [],\n      oldMemes: {\n        topCaption: \"\",\n        bottomCaption: \"\",\n        randomImage: \"\",\n        id:\"\",\n      }\n  }\n  this.handleChange = this.handleChange.bind(this)\n  this.handleSubmit = this.handleSubmit.bind(this)\n  this.handleReset = this.handleReset.bind(this)\n  this.handleDelete = this.handleDelete.bind(this)\n  this.editMeme = this.editMeme.bind(this)\n}\n\ncomponentDidMount() {\n  fetch(`https://api.imgflip.com/get_memes`)\n  .then(res => res.json())\n  .then(data => {\n      const {memes} = data.data\n      this.setState(\n          {\n              imageSrc: memes,\n              randomImage: memes[Math.floor(Math.random() * memes.length)].url\n          })\n  })\n  .catch(err => console.log(err))\n}\nhandleChange = e => {\n  e.preventDefault()\n  const {name, value} = e.target\n  this.setState({\n      [name]: value\n  })\n}\nhandleReset = e => {\n  e.preventDefault()\n  this.setState({\n      topCaption: \"\",\n      bottomCaption: \"\"\n  })\n}\n\nhandleSubmit = e => {\n  e.preventDefault()\n  const getRandomImage = this.state.imageSrc[Math.floor(Math.random() * this.state.imageSrc.length)].url\n  const {topCaption, bottomCaption, randomImage, id} = this.state\n  const newMeme = {\n      bottomCaption: bottomCaption,\n      topCaption: topCaption,\n      randomImage: randomImage\n  }\n  this.setState(prevState => ({\n      memesList: [...prevState.memesList, newMeme]\n  }))\n  this.setState({\n      randomImage: getRandomImage\n  })\n  this.setState({\n      topCaption: \"\",\n      bottomCaption: \"\"\n  })\n}\nhandleDelete = index => {\n      const newMemesList = [...this.state.memesList]\n      newMemesList.splice(index, 1)\n          this.setState({\n              memesList: newMemesList\n      })\n}\n\neditMeme(meme){\n  const filteredMemes = this.state.memeList.filter( (m) => {\n      return m.id !== meme.id;\n  })\n}\n  render() {\n    const {memesList} = this.state\n    const {handleDelete, handleEdit} = this\n    const memeComponent = memesList.map((img, index) => {\n    return (<MemeCard handleDelete={handleDelete} handleEdit={handleEdit} key={img.id} index={index} meme={img}/>)\n    })\n\n    const {bottomCaption, topCaption, randomImage} = this.state\n    const {handleChange, handleSubmit, handleReset} = this.state\n\n    return (\n      <div className=\"App\">\n      <NavBar />\n      <Container fluid=\"sm\">\n        <Row>\n            <Col>\n              {/* <ButtonGenerator /> */}\n              </Col>\n        </Row>\n        <Row>\n          <Col>\n              {/* <MemeForm /> */}\n          </Col>\n        </Row>\n        <Row>\n              {/* <MemeGroup /> */}\n        </Row>\n      </Container>\n      \n\n        <div className=\"content\">\n          <div className=\"meme-container\">\n            <img src={randomImage} alt=\"\" />\n            <h2 className=\"top-cap\">{topCaption}</h2>\n            <h2 className=\"bottom-cap\">{bottomCaption}</h2>\n        </div>\n        <form className=\"meme-caption\" onSubmit={handleSubmit}>\n            <input\n            type=\"text\"\n            name=\"topCaption\"\n            placeholder=\"Top Caption\"\n            value={topCaption}\n            onChange={handleChange}\n            />\n            <input\n            type=\"text\"\n            name=\"bottomCaption\"\n            placeholder=\"Bottom Caption\"\n            value={bottomCaption}\n            onChange={handleChange}\n            />\n            <button className=\"button-gen\">Generate Meme</button>\n            <button className=\"button-reset\" onClick={handleReset}>Reset</button>\n            <button onClick={() => this.editMeme(meme)}>Edit</button>\n        </form>\n          <div className=\"meme-card-container\">\n              {memeComponent}\n          </div>\n        </div>\n\n        <Breadcrumb>\n          <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\n          <Breadcrumb.Item href=\"https://getbootstrap.com/docs/4.0/components/breadcrumb/\">\n                Library\n          </Breadcrumb.Item>\n          <Breadcrumb.Item active>Data</Breadcrumb.Item>\n          </Breadcrumb>\n      </div>\n    )\n  } \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}